{"version":3,"sources":["logo.svg","Desktop/Desktop.js","Clock/Clock.js","App.js","reportWebVitals.js","index.js"],"names":["Desktop","className","type","onClick","addText","input","document","querySelector","messages","div","createElement","innerHTML","value","append","classList","add","setTimeout","remove","Clock","props","state","time","Date","toLocaleTimeString","hour","minute","second","this","intervalID","setInterval","tick","clearInterval","setState","Component","addEventListener","event","startTouchX","touches","clientX","endTouchX","Math","abs","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qMAAe,I,YCEA,SAASA,IACvB,OACC,sBAAKC,UAAU,2BAAf,UACC,sBAAKA,UAAU,kBAAf,UACC,uBAAOC,KAAK,SACZ,wBAAQC,QAASC,EAASH,UAAU,kBAApC,qBAED,qBAAKA,UAAU,0BAOlB,SAASG,IACR,IAAIC,EAAQC,SAASC,cAAc,SAC/BC,EAAWF,SAASC,cAAc,uBAElCE,EAAMH,SAASI,cAAc,OACjCD,EAAIR,UAAY,aAChBQ,EAAIE,UAAYN,EAAMO,MACtBJ,EAASK,OAAOJ,GAChBJ,EAAMO,MAAQ,KAEdN,SAASC,cAAc,mBAAmBO,UAAUC,IAAI,YACxDC,YAAY,WACXV,SAASC,cAAc,mBAAmBO,UAAUG,OAAO,cACzD,K,gCCAWC,E,kDA1Bb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAM,IAAIC,MAAOC,mBAAmB,GAAI,CAACC,KAAM,UAAWC,OAAO,UAAWC,OAAO,aAHpE,E,qDAMnB,WAAqB,IAAD,OAClBC,KAAKC,WAAaC,aAAY,kBAAM,EAAKC,SAAQ,M,kCAEnD,WACEC,cAAcJ,KAAKC,c,kBAErB,WACED,KAAKK,SAAS,CACZX,MAAM,IAAIC,MAAOC,mBAAmB,GAAI,CAACC,KAAM,UAAWC,OAAO,UAAWC,OAAO,gB,oBAGvF,WACE,OACI,qBAAKzB,UAAU,4BAAf,SACA,oBAAIA,UAAU,QAAd,SAAuB0B,KAAKP,MAAMC,a,GArBtBY,aCYpB3B,SAAS4B,iBAAiB,cAM1B,SAAoBC,GAClBC,EAAcD,EAAME,QAAQ,GAAGC,WAPmB,GACpDhC,SAAS4B,iBAAiB,aAS1B,SAAmBC,GACjBI,EAAYJ,EAAME,QAAQ,GAAGC,QAEzBF,EAAcG,GAAaC,KAAKC,IAAIL,EAAcG,GAAa,MACjEjC,SAASC,cAAc,oBAAoBO,UAAUG,OAAO,cAC5DX,SAASC,cAAc,oBAAoBO,UAAUC,IAAI,eAEvDqB,EAAcG,GAAaC,KAAKC,IAAIL,EAAcG,GAAa,MACjEjC,SAASC,cAAc,oBAAoBO,UAAUG,OAAO,cAC5DX,SAASC,cAAc,oBAAoBO,UAAUC,IAAI,kBAlBX,GAElD,IAAIqB,EAAc,KACdG,EAAY,KAmBDG,MAhCf,WACE,OACE,sBAAKzC,UAAU,kBAAf,UACI,cAACD,EAAD,IACA,cAAC,EAAD,QCGO2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhD,SAASiD,eAAe,SAM1BZ,M","file":"static/js/main.938ee743.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nexport default function Desktop() {\r\n\treturn (\r\n\t\t<div className='container main-container'>\r\n\t\t\t<div className='input-container'>\r\n\t\t\t\t<input type=\"text\"></input>\r\n\t\t\t\t<button onClick={addText} className='gradient-button'>Send</button>\r\n\t\t\t</div>\r\n\t\t\t<div className='messages-container'>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction addText() {\r\n\tlet input = document.querySelector('input')\r\n\tlet messages = document.querySelector('.messages-container')\r\n\r\n\tlet div = document.createElement('div')\r\n\tdiv.className = \"slide-text\"\r\n\tdiv.innerHTML = input.value\r\n\tmessages.append(div)\r\n\tinput.value = null\r\n\r\n\tdocument.querySelector('.main-container').classList.add('text-add')\r\n\tsetTimeout( function() {\r\n\t\tdocument.querySelector('.main-container').classList.remove('text-add')\r\n\t}, 4000)\r\n}","import React, { Component } from \"react\";\r\n\r\nclass Clock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit', second:'2-digit'}),\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.intervalID = setInterval(() => this.tick(), 10);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalID);\r\n  }\r\n  tick() {\r\n    this.setState({\r\n      time: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit', second:'2-digit'}),\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n        <div className='container clock-container'>\r\n        <h1 className='clock'>{this.state.time}</h1>\r\n        </div>\r\n        );\r\n  }\r\n}\r\n\r\nexport default Clock;","import logo from './logo.svg';\nimport './App.css';\nimport Desktop from './Desktop/Desktop';\nimport Clock from './Clock/Clock';\n\nfunction App() {\n  return (\n    <div className='areas-container'>\n        <Desktop />\n        <Clock />\n    </div>\n  );\n}\n\ndocument.addEventListener('touchstart', touchstart, false)\ndocument.addEventListener('touchmove', touchmove, false)\n\nlet startTouchX = null\nlet endTouchX = null\n\nfunction touchstart(event) {\n  startTouchX = event.touches[0].clientX\n}\n\nfunction touchmove(event) {\n  endTouchX = event.touches[0].clientX\n\n  if (startTouchX > endTouchX && Math.abs(startTouchX - endTouchX) > 100) {\n    document.querySelector('.areas-container').classList.remove('back-slide')\n    document.querySelector('.areas-container').classList.add('next-slide')\n  }\n  if (startTouchX < endTouchX && Math.abs(startTouchX - endTouchX) > 100) {\n    document.querySelector('.areas-container').classList.remove('next-slide')\n    document.querySelector('.areas-container').classList.add('back-slide')\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}